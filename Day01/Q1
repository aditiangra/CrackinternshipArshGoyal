https://leetcode.com/problems/find-the-duplicate-number/


class Solution {
public:
    int findDuplicate(vector<int>& nums) {
        vector<int> arr(nums.size()+1);
        for(auto it:nums)
        {
            arr[it]++;
        }
        for(int i=1;i<=nums.size();i++)
        {
            if(arr[i]>1)
            {
                return i;
            }
        }
        return 0;
    }
};




class Solution {
public:
    int findDuplicate(vector<int>& nums) {
        map<int,int>mpp;
        for(auto it:nums)
        {
            mpp[it]++;
        }
        for(auto it:mpp)
        {
            if(it.second>1)
            {
                return it.first;
            }
        }
        return 0;
        }
};





class Solution {
public:
    int findDuplicate(vector<int>& nums) {
        sort(nums.begin(),nums.end());
        for(int i=0;i<nums.size()-1;i++)
        {
            if(nums[i]==nums[i+1])
            {
                return nums[i];
            }
        }
        return 0;
    }
};
